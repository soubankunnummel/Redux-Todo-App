{"version":3,"sources":["Redux/todoReducer.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","Redux/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","todos","isEditing","editedText","reducers","addTodo","state","action","push","id","Date","now","text","payload","completed","console","log","Delete","filter","todo","ToggleCompleted","find","startEditing","saveEditing","updateEditedText","actions","AddTodoForm","inputRef","useRef","dispatch","useDispatch","useState","value","setValue","useEffect","current","focus","onSubmit","event","preventDefault","trim","alert","className","type","placeholder","ref","onChange","target","TodoItem","title","useSelector","handlSaveEdit","checked","onClick","style","border","outline","e","onKeyDown","key","onBlur","handlDelet","marginLeft","handlEdit","TodoList","revese","reverse","map","TotalCompleteItems","completedTaskCount","length","count","App","store","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c10626b4.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: {\r\n    todos: [],\r\n    isEditing: null,  \r\n    editedText: '', \r\n  },\r\n  reducers: {\r\n    addTodo: (state, action) => { \r\n      state.todos.push({\r\n        id: Date.now(),\r\n        text: action.payload,\r\n        completed: false,\r\n      });\r\n      console.log(addTodo);\r\n    },\r\n    Delete: (state, action) => {\r\n      const { payload: id } = action;\r\n      state.todos = state.todos.filter((todo) => todo.id !== id);\r\n    },\r\n    ToggleCompleted: (state, action) => {\r\n      const { payload: id } = action;\r\n      const todo = state.todos.find((todo) => todo.id === id);\r\n      if (todo) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n    },\r\n    startEditing: (state, action) => {\r\n      state.isEditing = action.payload;\r\n    \r\n      const todo = state.todos.find((todo) => todo.id === action.payload);\r\n      if (todo) {\r\n        state.editedText = todo.text;\r\n      }\r\n    },\r\n    saveEditing: (state, action) => {\r\n      const { id, text } = action.payload;\r\n      const todo = state.todos.find((todo) => todo.id === id);\r\n      if (todo) {\r\n        todo.text = text;\r\n      }\r\n   \r\n      state.isEditing = null;\r\n      state.editedText = '';\r\n    },\r\n    updateEditedText: (state, action) => {\r\n      \r\n      state.editedText = action.payload;\r\n    },\r\n   \r\n  },\r\n});\r\n\r\nexport const {\r\n  addTodo,\r\n  Delete,\r\n  ToggleCompleted,\r\n  startEditing,\r\n  saveEditing,\r\n  updateEditedText,\r\n} = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo } from '../Redux/todoReducer';\r\n\r\nconst AddTodoForm = () => {\r\n\tconst inputRef = useRef()\r\n\tconst dispatch = useDispatch()\r\n\tconst [value, setValue] = useState('');\r\n \r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault(); \r\n\t\tif (!value.trim()) {\r\n\t\t\t// when input feild emty\r\n\t\t\talert('Please enter a task before submitting.')\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\tdispatch(addTodo(value))\r\n\t\tsetValue('')\r\n\t\tconsole.log('user entered: ' + value); \r\n\t\t\r\n\t\t\r\n\t}; \r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus()\r\n\r\n\t},[])\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\r\n\t\t\t<label className='sr-only'>Name</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Add todo...'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t></input>\r\n\r\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Delete, ToggleCompleted, startEditing, saveEditing, updateEditedText } from '../Redux/todoReducer';\r\n\r\nconst TodoItem = ({ id, title, completed }) => {\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const isEditing = useSelector((state) => state.todo.isEditing === id); \r\n\r\n  const editedText = useSelector((state) => state.todo.editedText); \r\n\r\n  const todos = useSelector((state) => state.todo.todos); \r\n\r\n  const handlDelet = (id) => {\r\n    dispatch(Delete(id));\r\n  };\r\n\r\n  const handlEdit = (id) => {\r\n    \r\n    console.log(\"edit clicked\");\r\n    dispatch(startEditing(id));\r\n\r\n    const todo = todos.find((todo) => todo.id === id);\r\n    if (todo) {\r\n      dispatch(updateEditedText(todo.text)); \r\n    }\r\n  };\r\n\r\n  const handlSaveEdit = () => {\r\n   \r\n    dispatch(saveEditing({ id, text: editedText }));\r\n  };\r\n\r\n  const handlCheckbox = () => {\r\n    dispatch(ToggleCompleted(id));\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    if (isEditing && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isEditing]);\r\n\r\n  return (\r\n    <li className={`list-group-item ${completed && 'list-group-item-success'}`}>\r\n      <div className='d-flex justify-content-between'>\r\n        <span className='d-flex align-items-center'>\r\n          <input\r\n            type='checkbox'\r\n            className='mr-3'\r\n            checked={completed}\r\n            onClick={handlCheckbox}\r\n          ></input>\r\n          {isEditing ? (\r\n            <input\r\n              style={{ border: 'none', outline: 'none' }}\r\n              type='text'\r\n              value={editedText}\r\n              onChange={(e) => dispatch(updateEditedText(e.target.value))}\r\n              \r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  handlSaveEdit();\r\n                }\r\n              }}\r\n              onBlur={handlSaveEdit}\r\n              ref={inputRef}\r\n            />\r\n          ) : (\r\n            title\r\n          )}\r\n        </span>\r\n        <div className=''>\r\n          <button className='btn btn-danger ' onClick={() => handlDelet(id)}>\r\n            Delete\r\n          </button>\r\n          {isEditing ? (\r\n            <button\r\n              className='btn btn-primary '\r\n              style={{ marginLeft: 3 }}\r\n              onClick={handlSaveEdit}\r\n            >\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className='btn btn-primary '\r\n              style={{ marginLeft: 3 }}\r\n              onClick={() => handlEdit(id)}\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TodoList = () => {\r\n\tconst todos = useSelector((state) => state.todo.todos )\r\n\tconsole.log(todos);\r\n\r\n\tconst revese = [...todos].reverse()\r\n\r\n\r\n\treturn (\r\n\t\t<ul className='list-group' >\r\n\t\t\t{revese.map((todo) => (  \r\n\t\t\t\t<div key={todo.id}>\r\n\r\n\t\t\t\t<TodoItem id={todo.id} title={todo.text} completed={todo.completed} />\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TotalCompleteItems = () => {\r\n\tconst todos = useSelector((state) => state.todo.todos)\r\n\tconst completedTaskCount = todos.filter((todo) => todo.completed).length;\r\n\r\n\tconsole.log(completedTaskCount);\r\n\t\r\n\tconst count = completedTaskCount\r\n\treturn <h4 className='mt-3'>Total Complete Items:{`${count}`} </h4>;\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import todoReducer from \"./todoReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        todo: todoReducer\r\n        \r\n        \r\n    }\r\n})\r\n\r\n\r\nexport default store\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}